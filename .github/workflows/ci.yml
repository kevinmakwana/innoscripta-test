name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: PHP CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: xdebug
          extensions: mbstring, pcntl, gd, intl, pdo_mysql
          tools: composer:2

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress --no-suggest

      - name: Run PHPStan (static analysis)
        run: ./vendor/bin/phpstan analyse --memory-limit=1G

      - name: Run Pint (coding style)
        run: ./vendor/bin/pint --test

      - name: Run PHPUnit
        run: ./vendor/bin/phpunit --testdox --log-junit build/logs/junit.xml

      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: build/logs/junit.xml
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v3
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, xml, zip, gd
          coverage: pcov

      - name: Setup composer cache
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Prepare test DB
        run: |
          cp .env.example .env || true
          php artisan key:generate --ansi
          php artisan migrate --force --no-interaction


      - name: Run phpstan
        run: ./vendor/bin/phpstan analyse --memory-limit=1G || true

      - name: Run pint (code style)
        run: ./vendor/bin/pint -- --test || true

      - name: Run Composer Security Audit
        run: composer audit --no-interaction --no-dev || true

      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          scan-type: fs
          scan-ref: .
          format: table
          exit-code: 1
          ignore-unfixed: true

      - name: Check for pending migrations
        run: |
          php artisan migrate:status --no-interaction

      - name: Run performance tests (placeholder)
        run: |
          echo "Performance tests would run here (e.g., k6, artillery)"
        continue-on-error: true

      - name: Run tests with coverage and junit
        env:
          COVERAGE_MIN: 0.80
        run: |
          mkdir -p build/logs
          ./vendor/bin/phpunit --testdox --log-junit build/logs/junit.xml --coverage-clover build/logs/clover.xml

      - name: Run coverage check
        env:
          COVERAGE_MIN: 0.80
        run: |
          php tools/check_coverage.php build/logs/clover.xml

      - name: Upload junit artifact
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: build/logs/junit.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: build/logs/clover.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: build/logs/clover.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  messaging-smoke:
    runs-on: ubuntu-latest
    needs: tests
    services:
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: redis, mbstring, pdo_sqlite

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare environment
        run: |
          cp .env.example .env || true
          php artisan key:generate --ansi
          php artisan config:clear
        env:
          MESSAGING_DRIVER: redis
          MESSAGING_REDIS_MODE: list

      - name: Run messaging integration tests
        env:
          MESSAGING_DRIVER: redis
        run: |
          mkdir -p build/logs
          ./vendor/bin/phpunit --testdox --filter MessagingE2ETest --log-junit build/logs/messaging-junit.xml
  docker-build:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build app image
        run: docker build -t innoscripta-test .

      - name: Test Docker image
        run: |
          docker run --rm innoscripta-test php --version
          docker run --rm innoscripta-test php artisan --version
